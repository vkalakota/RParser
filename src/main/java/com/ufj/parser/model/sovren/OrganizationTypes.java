//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.09.24 at 11:50:38 PM EDT 
//


package com.ufj.parser.model.sovren;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for organizationTypes.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="organizationTypes"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="department"/&gt;
 *     &lt;enumeration value="group"/&gt;
 *     &lt;enumeration value="team"/&gt;
 *     &lt;enumeration value="branch"/&gt;
 *     &lt;enumeration value="company"/&gt;
 *     &lt;enumeration value="subsidiary"/&gt;
 *     &lt;enumeration value="unit"/&gt;
 *     &lt;enumeration value="headquarters"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "organizationTypes")
@XmlEnum
public enum OrganizationTypes {

    @XmlEnumValue("department")
    DEPARTMENT("department"),
    @XmlEnumValue("group")
    GROUP("group"),
    @XmlEnumValue("team")
    TEAM("team"),
    @XmlEnumValue("branch")
    BRANCH("branch"),
    @XmlEnumValue("company")
    COMPANY("company"),
    @XmlEnumValue("subsidiary")
    SUBSIDIARY("subsidiary"),
    @XmlEnumValue("unit")
    UNIT("unit"),
    @XmlEnumValue("headquarters")
    HEADQUARTERS("headquarters");
    private final String value;

    OrganizationTypes(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static OrganizationTypes fromValue(String v) {
        for (OrganizationTypes c: OrganizationTypes.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
